---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import FormattedDate from "../components/FormattedDate.astro";
import NavigationSidebar from "../components/NavigationSidebar.astro";
import { getCollection } from "astro:content";
import ContentSidebar from "../components/ContentSidebar/index.astro";
import SidebarGroupContent from "../components/ContentSidebar/SidebarGroupContent.astro";
import GroupContentMeunItem from "../components/ContentSidebar/GroupContentMeunItem.astro";
type Props = CollectionEntry<"japanese">["data"];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;

const posts = (await getCollection("japanese")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
const folderMap = new Map();

for (const post of posts) {
  const [folder] = post.slug.split("/");
  if (!folderMap.has(folder)) {
    folderMap.set(folder, []);
  }
  folderMap.get(folder).push(post);
}
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <style>
      main {
        width: 100%;
        max-width: 100%;
        margin: 0;
      }
      .hero-image {
        width: 100%;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: 12px;
        /* box-shadow: var(--box-shadow); */
      }
      .prose {
        width: 720px;
        max-width: calc(100% - 2em);
        margin: auto;
        padding: 1em;
        /* color: rgb(var(--gray-dark)); */
      }
      .title {
        margin-bottom: 1em;
        padding: 1em 0;
        text-align: center;
        line-height: 1;
      }
      .title h1 {
        margin: 0 0 0.5em 0;
      }
      .date {
        margin-bottom: 0.5em;
        /* color: rgb(var(--gray)); */
      }
      .last-updated-on {
        font-style: italic;
      }
    </style>
  </head>

  <body class="pl-[47px]">
    <!-- <Header /> -->
    <NavigationSidebar />
    <div class="w-full min-h-screen bg-[#010409] py-10">
      <main>
        <ContentSidebar>
          {
            Array.from(folderMap.entries()).map(([folder, folderPosts]) => (
              <SidebarGroupContent title={folder}>
                {folderPosts.map((post: any) => (
                  <GroupContentMeunItem
                    title={post.slug.split("/")[1]}
                    dirTitle={post.slug.split("/")[0]}
                  />
                ))}
              </SidebarGroupContent>
            ))
          }
        </ContentSidebar>

        <article class="text-white/60">
          <div class="hero-image">
            {
              heroImage && (
                <img width={1020} height={510} src={heroImage} alt="" />
              )
            }
          </div>
          <div class="prose">
            <div class="title">
              <div class="date">
                <FormattedDate date={pubDate} />
                {
                  updatedDate && (
                    <div class="last-updated-on">
                      Last updated on <FormattedDate date={updatedDate} />
                    </div>
                  )
                }
              </div>
              <h1>{title}</h1>
              <hr />
            </div>
            <slot />
          </div>
        </article>
      </main>
    </div>
    <!-- <Footer /> -->
  </body>
</html>
